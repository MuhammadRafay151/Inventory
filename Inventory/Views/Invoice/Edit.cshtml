
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model Inventory.Models.SalesInvoice
<div class="modal fade" id="delete" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Warning</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this item?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
                <button id="y1" type="button" class="btn btn-primary">Yes</button>
            </div>
        </div>
    </div>
</div>
<div class="row mt-5">
    <div class="col">
        <div class="card">
            <form action="/Invoice/Edit" method="post">
                <div class="card-header border border-dark">
                    <div class="row ">
                        <div class="col">
                            <div class="form-group">
                                @{
                                    var l1 = new List<SelectListItem>();
                                    l1.Add(new SelectListItem() { Text = "Select location", Disabled = true, Selected = true, Value = "" });
                                    foreach (Inventory.Models.Location l2 in ViewBag.loc)
                                    {

                                        l1.Add(new SelectListItem() { Text = l2.name, Value = l2.id.ToString() });

                                    }
                                }
                                <label for="exampleSelect1" class="bmd-label-static">Select Location</label>
                                @Html.DropDownListFor(m => m.LocationId, l1, new { @class = "form-control", required = "required" })
                                @Html.ValidationMessageFor(m => m.LocationId, "", new { @class = "text-danger" })
                            </div>

                        </div>
                        <div class="col">
                            <div class="form-group">
                                @{
                                    var l3 = new List<SelectListItem>();
                                    l3.Add(new SelectListItem() { Text = "Select Party", Disabled = true, Selected = true, Value = "" });
                                    foreach (Inventory.Models.party l2 in ViewBag.party)
                                    {

                                        l3.Add(new SelectListItem() { Text = l2.name, Value = l2.id.ToString() });

                                    }
                                }
                                <label for="exampleSelect1" class="bmd-label-static">Select Party</label>
                                @Html.DropDownListFor(m => m.PartyId, l3, new { @class = "form-control", required = "required" })
                                @Html.ValidationMessageFor(m => m.PartyId, "", new { @class = "text-danger" })
                            </div>

                        </div>
                    </div>
                    <div class="row ">
                        <div class="col">
                            <div class="form-group">


                                @{
                                    var l4 = new List<SelectListItem>();
                                    l4.Add(new SelectListItem() { Text = "Select Invoice Type", Disabled = true, Selected = true, Value = "" });
                                    foreach (Inventory.Models.InvoiceType l2 in ViewBag.itypes)
                                    {

                                        l4.Add(new SelectListItem() { Text = l2.type, Value = l2.id.ToString() });

                                    }
                                }
                                <label for="exampleSelect1" class="bmd-label-static">Select Invoice Type</label>
                                @Html.DropDownListFor(m => m.InvoiceTypeId, l4, new { @class = "form-control", required = "required" })
                                @Html.ValidationMessageFor(m => m.InvoiceTypeId, "", new { @class = "text-danger" })


                            </div>

                        </div>
                        <div class="col">
                            <div class="form-group">
                                <label for="exampleSelect1" class="bmd-label-static">Select Date</label>
                                <input class="form-control" type="date" name="@Html.NameFor(m=>m.Date)" required value="@Model.Date.ToString("yyyy-MM-dd")" />
                                @Html.ValidationMessageFor(m => m.Date, "", new { @class = "text-danger" })
                            </div>

                        </div>
                    </div>
                    @*<button class="btn btn-block btn-raised btn-primary d-inline">Submit</button>*@
                    <div class="d-flex w-100">
                        <div class="  align-self-center w-75">
                            <input type="submit" class="btn btn-primary btn-block btn-raised" value="Save Changes">

                        </div>
                        <div class="btn-group ml-auto ">
                            <button id="add" type="button" class="btn btn-primary btn-raised">+</button>
                            <button id="sub" type="button" class="btn btn-primary btn-raised">-</button>
                        </div>

                    </div>

                </div>
                <div class="card-body" style="max-height: 400px; overflow-y: scroll ">
                    <table class="table text-center table-bordered">
                        <thead class="thead-dark">
                            <tr>
                                <th>
                                    Item
                                </th>

                                <th>
                                    Price
                                </th>
                                <th>
                                    Qty
                                </th>
                                <th>
                                    Amount
                                </th>
                                <th>
                                    Actions
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model != null && Model.SaleInvoiceDetails != null)
                            {
                                for (var i = 0; i < Model.SaleInvoiceDetails.Count; i++)
                                {
                                    <tr>
                                        @{
                                            var l5 = new List<SelectListItem>();
                                            l5.Add(new SelectListItem() { Text = "Select Item", Disabled = true, Value = "" });
                                            foreach (Inventory.Models.Item l2 in ViewBag.items)
                                            {

                                                l5.Add(new SelectListItem() { Text = l2.Name, Value = l2.ItemId.ToString() });

                                            }
                                        }

                                        <td class="align-middle  text-center">
                                            @Html.TextBoxFor(m => m.SaleInvoiceDetails[i].SaleInvoiceDetailId, new { @class = "form-control", @readonly = "readonly", hidden = " hidden" })
                                            @Html.DropDownListFor(m => m.SaleInvoiceDetails[i].ItemId, l5, new { @class = "form-control  _items", required = "required" })
                                            @Html.ValidationMessageFor(m => m.SaleInvoiceDetails[i].ItemId, "", new { @class = "text-danger" })

                                        </td>
                                        <td class="align-middle  text-center">
                                            @Html.TextBoxFor(m => m.SaleInvoiceDetails[i].SalePrice, new { @class = "form-control  price", type = "number", step = "any" })
                                        </td>
                                        <td class="align-middle  text-center">

                                            @Html.TextBoxFor(m => m.SaleInvoiceDetails[i].Qty, new { @class = "form-control qty", type = "number" })
                                            @Html.ValidationMessageFor(m => m.SaleInvoiceDetails[i].Qty, "", new { @class = "text-danger" })
                                        </td>
                                        <td class="align-middle  text-center">@Model.SaleInvoiceDetails[i].Total Rs</td>
                                        @*<td><button type="button" class="btn btn-primary btn-raised del">Delete</button></td>*@
                                        <td class="align-middle  text-center">
                                            <div class="checkbox">
                                                <label>
                                                    Delete
                                                    <input type="checkbox" />

                                                </label>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                            @Html.ValidationMessageFor(m => m.SaleInvoiceDetails, "", new { @class = "text-danger" })
                        </tbody>
                    </table>
                    <div class="d-flex justify-content-end">
                        <p id="total">Total: @Model.TotalAmount Rs</p>
                    </div>
                </div>

            </form>

        </div>
    </div>
</div>
<div class="d-flex justify-content-end mt-3">

    <a href="/Invoice/" class="btn btn-primary btn-raised">Back</a>
</div>

<script>
    var count=0;

    $(document).ready(function () {
        count = $('tbody').children().length;
        var initialrows = count;
        var row = null;
        $('#add').click(function () {
            var templete = `<tr>
                               <td class="align-middle  text-center">
                                    <select   name="SaleInvoiceDetails[${count}].ItemId" class="form-control _items" required  >
                                        <option selected disabled value>Select Item</option>
                                   @foreach (Inventory.Models.Item l2 in ViewBag.items)
                                    {
                                        <option data-price=@l2.SalePrice value="@l2.ItemId">@l2.Name</option>
                                    }
                                    </select>
                                </td>
                                <td class=" align-middle  text-center">
<span class="bmd-form-group">

                                <input type="number"  name="SaleInvoiceDetails[${count}].SalePrice" class="form-control price" step="any" required/>
</span>
</td>
                                <td class="align-middle  text-center">
<span class="bmd-form-group">
                                    <input type="number"    name="SaleInvoiceDetails[${count}].Qty" class="form-control qty"  required/>

</span>
                                </td>
                               <td class="align-middle  text-center">


                                </td>
<td class="align-middle  text-center">
...

                                </td>
                            </tr>`;
            count++;
            $('tbody').append(templete)
        })
        $('#sub').click(function () {
            if ($('tbody').children().length > initialrows) {
                 $('tbody').children().last().remove();
                count--;
            }

        })
        $(document).on('focusout', '.qty', function () {
            var qty = this.value;
            var price = $(this.parentNode.parentNode.parentNode).find('.price').val();
            try {
                var temp = parseFloat(qty) * parseFloat(price);

                if (!isNaN(temp)) {
                    this.parentNode.parentNode.parentNode.children[3].innerHTML = temp + " Rs"
                    calculatebill();
                }
            } catch (err) {
                console.log(err);
            };

        })
        $(document).on('focusout', '.price', function () {

            var price = this.value;
            var qty = $(this.parentNode.parentNode.parentNode).find('.qty').val();
            try {
                var temp = parseFloat(qty) * parseFloat(price);
                if (!isNaN(temp)) {
                    this.parentNode.parentNode.parentNode.children[3].innerHTML = temp + " Rs"
                     calculatebill();
                }
            } catch (err) {
                console.log(err);
            };
         })
        $(document).on('change', '._items', function () {
            var selected_option = this.options[this.selectedIndex];
            $(this.parentNode.parentNode).find('.price').val($(selected_option).data("price"));
            $(this.parentNode.parentNode).find('.price').trigger('focusout');
        })
        $('.del').click(function () {
            //invoiceid = $(this).data('id');
            $('#delete').modal('show')
            row=this.parentNode.parentNode;
         })
        $('#y1').click(function () {
            row.remove();
            initialrows -= 1;
           $('#delete').modal('hide')
        })
    });
    function calculatebill(){
        var total = 0.0;
        var x = document.getElementsByTagName("tr");
        var total = 0.0;
        for (var i = 1; i < x.length; i++) {
            var check = $(x[i].cells[4]).find("input[type=checkbox]")
            if (check.length == 1) {
                if ($(check).prop("checked") == false) {
                    var data = x[i].cells[3].innerHTML;
                    total += parseFloat(data.split(" ")[0]);
                }
            } else {
                 var data = x[i].cells[3].innerHTML;
            total += parseFloat(data.split(" ")[0]);
            }

          //  console.log($(x[i].cells[4]).find("input[type=checkbox]").prop("checked"))

        }
        $('#total').html('Total: ' + total + " Rs");
        //console.log(total);
    }
</script>




